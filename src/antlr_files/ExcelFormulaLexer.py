# Generated from ExcelFormula.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,45,344,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,1,0,1,
        0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,
        8,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,
        1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,17,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,
        1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
        1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,
        1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,
        1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,
        1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
        1,38,1,38,1,38,3,38,282,8,38,1,39,1,39,5,39,286,8,39,10,39,12,39,
        289,9,39,1,39,1,39,1,40,3,40,294,8,40,1,40,4,40,297,8,40,11,40,12,
        40,298,1,40,3,40,302,8,40,1,40,4,40,305,8,40,11,40,12,40,306,1,41,
        4,41,310,8,41,11,41,12,41,311,1,41,1,41,4,41,316,8,41,11,41,12,41,
        317,3,41,320,8,41,1,42,1,42,5,42,324,8,42,10,42,12,42,327,9,42,1,
        42,1,42,1,43,1,43,5,43,333,8,43,10,43,12,43,336,9,43,1,44,4,44,339,
        8,44,11,44,12,44,340,1,44,1,44,0,0,45,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
        81,41,83,42,85,43,87,44,89,45,1,0,29,2,0,73,73,105,105,2,0,70,70,
        102,102,2,0,83,83,115,115,2,0,85,85,117,117,2,0,77,77,109,109,2,
        0,79,79,111,111,2,0,82,82,114,114,2,0,65,65,97,97,2,0,78,78,110,
        110,2,0,68,68,100,100,2,0,67,67,99,99,2,0,84,84,116,116,2,0,69,69,
        101,101,2,0,87,87,119,119,2,0,86,86,118,118,2,0,76,76,108,108,2,
        0,75,75,107,107,2,0,80,80,112,112,2,0,88,88,120,120,2,0,72,72,104,
        104,2,0,71,71,103,103,2,0,89,89,121,121,3,0,10,10,13,13,39,39,1,
        0,65,90,1,0,48,57,1,0,34,34,3,0,65,90,95,95,97,122,4,0,48,57,65,
        90,95,95,97,122,3,0,9,10,13,13,32,32,355,0,1,1,0,0,0,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,
        25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
        35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,
        45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,
        55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,
        65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,
        75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,
        85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,1,91,1,0,0,0,3,93,1,0,0,0,5,
        95,1,0,0,0,7,97,1,0,0,0,9,99,1,0,0,0,11,101,1,0,0,0,13,103,1,0,0,
        0,15,105,1,0,0,0,17,107,1,0,0,0,19,109,1,0,0,0,21,112,1,0,0,0,23,
        115,1,0,0,0,25,117,1,0,0,0,27,119,1,0,0,0,29,121,1,0,0,0,31,124,
        1,0,0,0,33,128,1,0,0,0,35,131,1,0,0,0,37,135,1,0,0,0,39,143,1,0,
        0,0,41,151,1,0,0,0,43,156,1,0,0,0,45,161,1,0,0,0,47,167,1,0,0,0,
        49,175,1,0,0,0,51,185,1,0,0,0,53,191,1,0,0,0,55,200,1,0,0,0,57,209,
        1,0,0,0,59,217,1,0,0,0,61,221,1,0,0,0,63,229,1,0,0,0,65,235,1,0,
        0,0,67,242,1,0,0,0,69,246,1,0,0,0,71,252,1,0,0,0,73,260,1,0,0,0,
        75,269,1,0,0,0,77,281,1,0,0,0,79,283,1,0,0,0,81,293,1,0,0,0,83,309,
        1,0,0,0,85,321,1,0,0,0,87,330,1,0,0,0,89,338,1,0,0,0,91,92,5,40,
        0,0,92,2,1,0,0,0,93,94,5,44,0,0,94,4,1,0,0,0,95,96,5,41,0,0,96,6,
        1,0,0,0,97,98,5,42,0,0,98,8,1,0,0,0,99,100,5,47,0,0,100,10,1,0,0,
        0,101,102,5,43,0,0,102,12,1,0,0,0,103,104,5,45,0,0,104,14,1,0,0,
        0,105,106,5,62,0,0,106,16,1,0,0,0,107,108,5,60,0,0,108,18,1,0,0,
        0,109,110,5,62,0,0,110,111,5,61,0,0,111,20,1,0,0,0,112,113,5,60,
        0,0,113,114,5,61,0,0,114,22,1,0,0,0,115,116,5,61,0,0,116,24,1,0,
        0,0,117,118,5,38,0,0,118,26,1,0,0,0,119,120,5,58,0,0,120,28,1,0,
        0,0,121,122,7,0,0,0,122,123,7,1,0,0,123,30,1,0,0,0,124,125,7,2,0,
        0,125,126,7,3,0,0,126,127,7,4,0,0,127,32,1,0,0,0,128,129,7,5,0,0,
        129,130,7,6,0,0,130,34,1,0,0,0,131,132,7,7,0,0,132,133,7,8,0,0,133,
        134,7,9,0,0,134,36,1,0,0,0,135,136,7,10,0,0,136,137,7,5,0,0,137,
        138,7,3,0,0,138,139,7,8,0,0,139,140,7,11,0,0,140,141,7,0,0,0,141,
        142,7,1,0,0,142,38,1,0,0,0,143,144,7,0,0,0,144,145,7,1,0,0,145,146,
        7,12,0,0,146,147,7,6,0,0,147,148,7,6,0,0,148,149,7,5,0,0,149,150,
        7,6,0,0,150,40,1,0,0,0,151,152,7,6,0,0,152,153,7,5,0,0,153,154,7,
        13,0,0,154,155,7,2,0,0,155,42,1,0,0,0,156,157,7,1,0,0,157,158,7,
        0,0,0,158,159,7,8,0,0,159,160,7,9,0,0,160,44,1,0,0,0,161,162,7,10,
        0,0,162,163,7,5,0,0,163,164,7,3,0,0,164,165,7,8,0,0,165,166,7,11,
        0,0,166,46,1,0,0,0,167,168,7,14,0,0,168,169,7,15,0,0,169,170,7,5,
        0,0,170,171,7,5,0,0,171,172,7,16,0,0,172,173,7,3,0,0,173,174,7,17,
        0,0,174,48,1,0,0,0,175,176,7,6,0,0,176,177,7,5,0,0,177,178,7,3,0,
        0,178,179,7,8,0,0,179,180,7,9,0,0,180,181,7,9,0,0,181,182,7,5,0,
        0,182,183,7,13,0,0,183,184,7,8,0,0,184,50,1,0,0,0,185,186,7,0,0,
        0,186,187,7,8,0,0,187,188,7,9,0,0,188,189,7,12,0,0,189,190,7,18,
        0,0,190,52,1,0,0,0,191,192,7,0,0,0,192,193,7,8,0,0,193,194,7,9,0,
        0,194,195,7,0,0,0,195,196,7,6,0,0,196,197,7,12,0,0,197,198,7,10,
        0,0,198,199,7,11,0,0,199,54,1,0,0,0,200,201,7,10,0,0,201,202,7,5,
        0,0,202,203,7,3,0,0,203,204,7,8,0,0,204,205,7,11,0,0,205,206,7,0,
        0,0,206,207,7,1,0,0,207,208,7,2,0,0,208,56,1,0,0,0,209,210,7,12,
        0,0,210,211,7,5,0,0,211,212,7,4,0,0,212,213,7,5,0,0,213,214,7,8,
        0,0,214,215,7,11,0,0,215,216,7,19,0,0,216,58,1,0,0,0,217,218,7,8,
        0,0,218,219,7,5,0,0,219,220,7,11,0,0,220,60,1,0,0,0,221,222,7,7,
        0,0,222,223,7,14,0,0,223,224,7,12,0,0,224,225,7,6,0,0,225,226,7,
        7,0,0,226,227,7,20,0,0,227,228,7,12,0,0,228,62,1,0,0,0,229,230,7,
        2,0,0,230,231,7,3,0,0,231,232,7,4,0,0,232,233,7,0,0,0,233,234,7,
        1,0,0,234,64,1,0,0,0,235,236,7,10,0,0,236,237,7,5,0,0,237,238,7,
        8,0,0,238,239,7,10,0,0,239,240,7,7,0,0,240,241,7,11,0,0,241,66,1,
        0,0,0,242,243,7,15,0,0,243,244,7,12,0,0,244,245,7,8,0,0,245,68,1,
        0,0,0,246,247,7,6,0,0,247,248,7,5,0,0,248,249,7,3,0,0,249,250,7,
        8,0,0,250,251,7,9,0,0,251,70,1,0,0,0,252,253,7,0,0,0,253,254,7,2,
        0,0,254,255,7,12,0,0,255,256,7,6,0,0,256,257,7,6,0,0,257,258,7,5,
        0,0,258,259,7,6,0,0,259,72,1,0,0,0,260,261,7,21,0,0,261,262,7,12,
        0,0,262,263,7,7,0,0,263,264,7,6,0,0,264,265,7,1,0,0,265,266,7,6,
        0,0,266,267,7,7,0,0,267,268,7,10,0,0,268,74,1,0,0,0,269,270,7,6,
        0,0,270,271,7,0,0,0,271,272,7,20,0,0,272,273,7,19,0,0,273,274,7,
        11,0,0,274,76,1,0,0,0,275,276,3,79,39,0,276,277,5,33,0,0,277,282,
        1,0,0,0,278,279,3,87,43,0,279,280,5,33,0,0,280,282,1,0,0,0,281,275,
        1,0,0,0,281,278,1,0,0,0,282,78,1,0,0,0,283,287,5,39,0,0,284,286,
        8,22,0,0,285,284,1,0,0,0,286,289,1,0,0,0,287,285,1,0,0,0,287,288,
        1,0,0,0,288,290,1,0,0,0,289,287,1,0,0,0,290,291,5,39,0,0,291,80,
        1,0,0,0,292,294,5,36,0,0,293,292,1,0,0,0,293,294,1,0,0,0,294,296,
        1,0,0,0,295,297,7,23,0,0,296,295,1,0,0,0,297,298,1,0,0,0,298,296,
        1,0,0,0,298,299,1,0,0,0,299,301,1,0,0,0,300,302,5,36,0,0,301,300,
        1,0,0,0,301,302,1,0,0,0,302,304,1,0,0,0,303,305,7,24,0,0,304,303,
        1,0,0,0,305,306,1,0,0,0,306,304,1,0,0,0,306,307,1,0,0,0,307,82,1,
        0,0,0,308,310,7,24,0,0,309,308,1,0,0,0,310,311,1,0,0,0,311,309,1,
        0,0,0,311,312,1,0,0,0,312,319,1,0,0,0,313,315,5,46,0,0,314,316,7,
        24,0,0,315,314,1,0,0,0,316,317,1,0,0,0,317,315,1,0,0,0,317,318,1,
        0,0,0,318,320,1,0,0,0,319,313,1,0,0,0,319,320,1,0,0,0,320,84,1,0,
        0,0,321,325,5,34,0,0,322,324,8,25,0,0,323,322,1,0,0,0,324,327,1,
        0,0,0,325,323,1,0,0,0,325,326,1,0,0,0,326,328,1,0,0,0,327,325,1,
        0,0,0,328,329,5,34,0,0,329,86,1,0,0,0,330,334,7,26,0,0,331,333,7,
        27,0,0,332,331,1,0,0,0,333,336,1,0,0,0,334,332,1,0,0,0,334,335,1,
        0,0,0,335,88,1,0,0,0,336,334,1,0,0,0,337,339,7,28,0,0,338,337,1,
        0,0,0,339,340,1,0,0,0,340,338,1,0,0,0,340,341,1,0,0,0,341,342,1,
        0,0,0,342,343,6,44,0,0,343,90,1,0,0,0,13,0,281,287,293,298,301,306,
        311,317,319,325,334,340,1,6,0,0
    ]

class ExcelFormulaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    IF = 15
    SUM = 16
    OR = 17
    AND = 18
    COUNTIF = 19
    IFERROR = 20
    ROWS = 21
    FIND = 22
    COUNT = 23
    VLOOKUP = 24
    ROUNDDOWN = 25
    INDEX = 26
    INDIRECT = 27
    COUNTIFS = 28
    EOMONTH = 29
    NOT = 30
    AVERAGE = 31
    SUMIF = 32
    CONCAT = 33
    LEN = 34
    ROUND = 35
    ISERROR = 36
    YEARFRAC = 37
    RIGHT = 38
    SHEET_NAME = 39
    QUOTED_SHEET_NAME = 40
    CELL = 41
    NUMBER = 42
    STRING = 43
    IDENTIFIER = 44
    WS = 45

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'", "'*'", "'/'", "'+'", "'-'", "'>'", "'<'", 
            "'>='", "'<='", "'='", "'&'", "':'" ]

    symbolicNames = [ "<INVALID>",
            "IF", "SUM", "OR", "AND", "COUNTIF", "IFERROR", "ROWS", "FIND", 
            "COUNT", "VLOOKUP", "ROUNDDOWN", "INDEX", "INDIRECT", "COUNTIFS", 
            "EOMONTH", "NOT", "AVERAGE", "SUMIF", "CONCAT", "LEN", "ROUND", 
            "ISERROR", "YEARFRAC", "RIGHT", "SHEET_NAME", "QUOTED_SHEET_NAME", 
            "CELL", "NUMBER", "STRING", "IDENTIFIER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "IF", "SUM", "OR", "AND", "COUNTIF", "IFERROR", "ROWS", 
                  "FIND", "COUNT", "VLOOKUP", "ROUNDDOWN", "INDEX", "INDIRECT", 
                  "COUNTIFS", "EOMONTH", "NOT", "AVERAGE", "SUMIF", "CONCAT", 
                  "LEN", "ROUND", "ISERROR", "YEARFRAC", "RIGHT", "SHEET_NAME", 
                  "QUOTED_SHEET_NAME", "CELL", "NUMBER", "STRING", "IDENTIFIER", 
                  "WS" ]

    grammarFileName = "ExcelFormula.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


